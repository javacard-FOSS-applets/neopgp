// SPDX-License-Identifier: GPL-3.0-or-later
package cc.walle.neopgp;

public class NeoSECP521R1Key extends NeoECKey {
	private static final byte[] oid = {
		(byte)0x2b, (byte)0x81, (byte)0x04, (byte)0x00,
		(byte)0x23,
	};

	private static final short size = 521;

	private static final byte[] p = {
		(byte)0x01, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff,
	};

	private static final byte[] a = {
		(byte)0x01, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xfc,
	};

	private static final byte[] b = {
		(byte)0x00, (byte)0x51, (byte)0x95, (byte)0x3e,
		(byte)0xb9, (byte)0x61, (byte)0x8e, (byte)0x1c,
		(byte)0x9a, (byte)0x1f, (byte)0x92, (byte)0x9a,
		(byte)0x21, (byte)0xa0, (byte)0xb6, (byte)0x85,
		(byte)0x40, (byte)0xee, (byte)0xa2, (byte)0xda,
		(byte)0x72, (byte)0x5b, (byte)0x99, (byte)0xb3,
		(byte)0x15, (byte)0xf3, (byte)0xb8, (byte)0xb4,
		(byte)0x89, (byte)0x91, (byte)0x8e, (byte)0xf1,
		(byte)0x09, (byte)0xe1, (byte)0x56, (byte)0x19,
		(byte)0x39, (byte)0x51, (byte)0xec, (byte)0x7e,
		(byte)0x93, (byte)0x7b, (byte)0x16, (byte)0x52,
		(byte)0xc0, (byte)0xbd, (byte)0x3b, (byte)0xb1,
		(byte)0xbf, (byte)0x07, (byte)0x35, (byte)0x73,
		(byte)0xdf, (byte)0x88, (byte)0x3d, (byte)0x2c,
		(byte)0x34, (byte)0xf1, (byte)0xef, (byte)0x45,
		(byte)0x1f, (byte)0xd4, (byte)0x6b, (byte)0x50,
		(byte)0x3f, (byte)0x00,
	};

	private static final byte[] G = {
		(byte)0x04, /* uncompressed raw */
		(byte)0x00, (byte)0xc6, (byte)0x85, (byte)0x8e,
		(byte)0x06, (byte)0xb7, (byte)0x04, (byte)0x04,
		(byte)0xe9, (byte)0xcd, (byte)0x9e, (byte)0x3e,
		(byte)0xcb, (byte)0x66, (byte)0x23, (byte)0x95,
		(byte)0xb4, (byte)0x42, (byte)0x9c, (byte)0x64,
		(byte)0x81, (byte)0x39, (byte)0x05, (byte)0x3f,
		(byte)0xb5, (byte)0x21, (byte)0xf8, (byte)0x28,
		(byte)0xaf, (byte)0x60, (byte)0x6b, (byte)0x4d,
		(byte)0x3d, (byte)0xba, (byte)0xa1, (byte)0x4b,
		(byte)0x5e, (byte)0x77, (byte)0xef, (byte)0xe7,
		(byte)0x59, (byte)0x28, (byte)0xfe, (byte)0x1d,
		(byte)0xc1, (byte)0x27, (byte)0xa2, (byte)0xff,
		(byte)0xa8, (byte)0xde, (byte)0x33, (byte)0x48,
		(byte)0xb3, (byte)0xc1, (byte)0x85, (byte)0x6a,
		(byte)0x42, (byte)0x9b, (byte)0xf9, (byte)0x7e,
		(byte)0x7e, (byte)0x31, (byte)0xc2, (byte)0xe5,
		(byte)0xbd, (byte)0x66, (byte)0x01, (byte)0x18,
		(byte)0x39, (byte)0x29, (byte)0x6a, (byte)0x78,
		(byte)0x9a, (byte)0x3b, (byte)0xc0, (byte)0x04,
		(byte)0x5c, (byte)0x8a, (byte)0x5f, (byte)0xb4,
		(byte)0x2c, (byte)0x7d, (byte)0x1b, (byte)0xd9,
		(byte)0x98, (byte)0xf5, (byte)0x44, (byte)0x49,
		(byte)0x57, (byte)0x9b, (byte)0x44, (byte)0x68,
		(byte)0x17, (byte)0xaf, (byte)0xbd, (byte)0x17,
		(byte)0x27, (byte)0x3e, (byte)0x66, (byte)0x2c,
		(byte)0x97, (byte)0xee, (byte)0x72, (byte)0x99,
		(byte)0x5e, (byte)0xf4, (byte)0x26, (byte)0x40,
		(byte)0xc5, (byte)0x50, (byte)0xb9, (byte)0x01,
		(byte)0x3f, (byte)0xad, (byte)0x07, (byte)0x61,
		(byte)0x35, (byte)0x3c, (byte)0x70, (byte)0x86,
		(byte)0xa2, (byte)0x72, (byte)0xc2, (byte)0x40,
		(byte)0x88, (byte)0xbe, (byte)0x94, (byte)0x76,
		(byte)0x9f, (byte)0xd1, (byte)0x66, (byte)0x50,
	};

	private static final byte[] n = {
		(byte)0x01, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xfa, (byte)0x51, (byte)0x86,
		(byte)0x87, (byte)0x83, (byte)0xbf, (byte)0x2f,
		(byte)0x96, (byte)0x6b, (byte)0x7f, (byte)0xcc,
		(byte)0x01, (byte)0x48, (byte)0xf7, (byte)0x09,
		(byte)0xa5, (byte)0xd0, (byte)0x3b, (byte)0xb5,
		(byte)0xc9, (byte)0xb8, (byte)0x89, (byte)0x9c,
		(byte)0x47, (byte)0xae, (byte)0xbb, (byte)0x6f,
		(byte)0xb7, (byte)0x1e, (byte)0x91, (byte)0x38,
		(byte)0x64, (byte)0x09,
	};

	private static final short k = 1;

	public NeoSECP521R1Key(byte keyRef) {
		super(keyRef, oid, size, p, a, b, G, n, k);
	};
}
