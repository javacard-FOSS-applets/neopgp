// SPDX-License-Identifier: GPL-3.0-or-later
package cc.walle.neopgp;

public class NeoBrainpoolP384R1Key extends NeoECKey {
	private static final byte[] oid = {
		(byte)0x2b, (byte)0x24, (byte)0x03, (byte)0x03,
		(byte)0x02, (byte)0x08, (byte)0x01, (byte)0x01,
		(byte)0x0b,
	};

	private static final short size = 384;

	private static final byte[] p = {
		(byte)0x8c, (byte)0xb9, (byte)0x1e, (byte)0x82,
		(byte)0xa3, (byte)0x38, (byte)0x6d, (byte)0x28,
		(byte)0x0f, (byte)0x5d, (byte)0x6f, (byte)0x7e,
		(byte)0x50, (byte)0xe6, (byte)0x41, (byte)0xdf,
		(byte)0x15, (byte)0x2f, (byte)0x71, (byte)0x09,
		(byte)0xed, (byte)0x54, (byte)0x56, (byte)0xb4,
		(byte)0x12, (byte)0xb1, (byte)0xda, (byte)0x19,
		(byte)0x7f, (byte)0xb7, (byte)0x11, (byte)0x23,
		(byte)0xac, (byte)0xd3, (byte)0xa7, (byte)0x29,
		(byte)0x90, (byte)0x1d, (byte)0x1a, (byte)0x71,
		(byte)0x87, (byte)0x47, (byte)0x00, (byte)0x13,
		(byte)0x31, (byte)0x07, (byte)0xec, (byte)0x53,
	};

	private static final byte[] a = {
		(byte)0x7b, (byte)0xc3, (byte)0x82, (byte)0xc6,
		(byte)0x3d, (byte)0x8c, (byte)0x15, (byte)0x0c,
		(byte)0x3c, (byte)0x72, (byte)0x08, (byte)0x0a,
		(byte)0xce, (byte)0x05, (byte)0xaf, (byte)0xa0,
		(byte)0xc2, (byte)0xbe, (byte)0xa2, (byte)0x8e,
		(byte)0x4f, (byte)0xb2, (byte)0x27, (byte)0x87,
		(byte)0x13, (byte)0x91, (byte)0x65, (byte)0xef,
		(byte)0xba, (byte)0x91, (byte)0xf9, (byte)0x0f,
		(byte)0x8a, (byte)0xa5, (byte)0x81, (byte)0x4a,
		(byte)0x50, (byte)0x3a, (byte)0xd4, (byte)0xeb,
		(byte)0x04, (byte)0xa8, (byte)0xc7, (byte)0xdd,
		(byte)0x22, (byte)0xce, (byte)0x28, (byte)0x26,
	};

	private static final byte[] b = {
		(byte)0x04, (byte)0xa8, (byte)0xc7, (byte)0xdd,
		(byte)0x22, (byte)0xce, (byte)0x28, (byte)0x26,
		(byte)0x8b, (byte)0x39, (byte)0xb5, (byte)0x54,
		(byte)0x16, (byte)0xf0, (byte)0x44, (byte)0x7c,
		(byte)0x2f, (byte)0xb7, (byte)0x7d, (byte)0xe1,
		(byte)0x07, (byte)0xdc, (byte)0xd2, (byte)0xa6,
		(byte)0x2e, (byte)0x88, (byte)0x0e, (byte)0xa5,
		(byte)0x3e, (byte)0xeb, (byte)0x62, (byte)0xd5,
		(byte)0x7c, (byte)0xb4, (byte)0x39, (byte)0x02,
		(byte)0x95, (byte)0xdb, (byte)0xc9, (byte)0x94,
		(byte)0x3a, (byte)0xb7, (byte)0x86, (byte)0x96,
		(byte)0xfa, (byte)0x50, (byte)0x4c, (byte)0x11,
	};

	private static final byte[] G = {
		(byte)0x04, /* uncompressed raw */
		(byte)0x1d, (byte)0x1c, (byte)0x64, (byte)0xf0,
		(byte)0x68, (byte)0xcf, (byte)0x45, (byte)0xff,
		(byte)0xa2, (byte)0xa6, (byte)0x3a, (byte)0x81,
		(byte)0xb7, (byte)0xc1, (byte)0x3f, (byte)0x6b,
		(byte)0x88, (byte)0x47, (byte)0xa3, (byte)0xe7,
		(byte)0x7e, (byte)0xf1, (byte)0x4f, (byte)0xe3,
		(byte)0xdb, (byte)0x7f, (byte)0xca, (byte)0xfe,
		(byte)0x0c, (byte)0xbd, (byte)0x10, (byte)0xe8,
		(byte)0xe8, (byte)0x26, (byte)0xe0, (byte)0x34,
		(byte)0x36, (byte)0xd6, (byte)0x46, (byte)0xaa,
		(byte)0xef, (byte)0x87, (byte)0xb2, (byte)0xe2,
		(byte)0x47, (byte)0xd4, (byte)0xaf, (byte)0x1e,
		(byte)0x8a, (byte)0xbe, (byte)0x1d, (byte)0x75,
		(byte)0x20, (byte)0xf9, (byte)0xc2, (byte)0xa4,
		(byte)0x5c, (byte)0xb1, (byte)0xeb, (byte)0x8e,
		(byte)0x95, (byte)0xcf, (byte)0xd5, (byte)0x52,
		(byte)0x62, (byte)0xb7, (byte)0x0b, (byte)0x29,
		(byte)0xfe, (byte)0xec, (byte)0x58, (byte)0x64,
		(byte)0xe1, (byte)0x9c, (byte)0x05, (byte)0x4f,
		(byte)0xf9, (byte)0x91, (byte)0x29, (byte)0x28,
		(byte)0x0e, (byte)0x46, (byte)0x46, (byte)0x21,
		(byte)0x77, (byte)0x91, (byte)0x81, (byte)0x11,
		(byte)0x42, (byte)0x82, (byte)0x03, (byte)0x41,
		(byte)0x26, (byte)0x3c, (byte)0x53, (byte)0x15,
	};

	private static final byte[] n = {
		(byte)0x8c, (byte)0xb9, (byte)0x1e, (byte)0x82,
		(byte)0xa3, (byte)0x38, (byte)0x6d, (byte)0x28,
		(byte)0x0f, (byte)0x5d, (byte)0x6f, (byte)0x7e,
		(byte)0x50, (byte)0xe6, (byte)0x41, (byte)0xdf,
		(byte)0x15, (byte)0x2f, (byte)0x71, (byte)0x09,
		(byte)0xed, (byte)0x54, (byte)0x56, (byte)0xb3,
		(byte)0x1f, (byte)0x16, (byte)0x6e, (byte)0x6c,
		(byte)0xac, (byte)0x04, (byte)0x25, (byte)0xa7,
		(byte)0xcf, (byte)0x3a, (byte)0xb6, (byte)0xaf,
		(byte)0x6b, (byte)0x7f, (byte)0xc3, (byte)0x10,
		(byte)0x3b, (byte)0x88, (byte)0x32, (byte)0x02,
		(byte)0xe9, (byte)0x04, (byte)0x65, (byte)0x65,
	};

	private static final short k = 1;

	public NeoBrainpoolP384R1Key(byte keyRef) {
		super(keyRef, oid, size, p, a, b, G, n, k);
	};
}
