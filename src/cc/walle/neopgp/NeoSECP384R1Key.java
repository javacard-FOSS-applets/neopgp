// SPDX-License-Identifier: GPL-3.0-or-later
package cc.walle.neopgp;

public class NeoSECP384R1Key extends NeoECKey {
	private static final byte[] oid = {
		(byte)0x2b, (byte)0x81, (byte)0x04, (byte)0x00,
		(byte)0x22,
	};

	private static final short size = 384;

	private static final byte[] p = {
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xfe,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
		(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
	};

	private static final byte[] a = {
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xfe,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
		(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xfc,
	};

	private static final byte[] b = {
		(byte)0xb3, (byte)0x31, (byte)0x2f, (byte)0xa7,
		(byte)0xe2, (byte)0x3e, (byte)0xe7, (byte)0xe4,
		(byte)0x98, (byte)0x8e, (byte)0x05, (byte)0x6b,
		(byte)0xe3, (byte)0xf8, (byte)0x2d, (byte)0x19,
		(byte)0x18, (byte)0x1d, (byte)0x9c, (byte)0x6e,
		(byte)0xfe, (byte)0x81, (byte)0x41, (byte)0x12,
		(byte)0x03, (byte)0x14, (byte)0x08, (byte)0x8f,
		(byte)0x50, (byte)0x13, (byte)0x87, (byte)0x5a,
		(byte)0xc6, (byte)0x56, (byte)0x39, (byte)0x8d,
		(byte)0x8a, (byte)0x2e, (byte)0xd1, (byte)0x9d,
		(byte)0x2a, (byte)0x85, (byte)0xc8, (byte)0xed,
		(byte)0xd3, (byte)0xec, (byte)0x2a, (byte)0xef,
	};

	private static final byte[] G = {
		(byte)0x04, /* uncompressed raw */
		(byte)0xaa, (byte)0x87, (byte)0xca, (byte)0x22,
		(byte)0xbe, (byte)0x8b, (byte)0x05, (byte)0x37,
		(byte)0x8e, (byte)0xb1, (byte)0xc7, (byte)0x1e,
		(byte)0xf3, (byte)0x20, (byte)0xad, (byte)0x74,
		(byte)0x6e, (byte)0x1d, (byte)0x3b, (byte)0x62,
		(byte)0x8b, (byte)0xa7, (byte)0x9b, (byte)0x98,
		(byte)0x59, (byte)0xf7, (byte)0x41, (byte)0xe0,
		(byte)0x82, (byte)0x54, (byte)0x2a, (byte)0x38,
		(byte)0x55, (byte)0x02, (byte)0xf2, (byte)0x5d,
		(byte)0xbf, (byte)0x55, (byte)0x29, (byte)0x6c,
		(byte)0x3a, (byte)0x54, (byte)0x5e, (byte)0x38,
		(byte)0x72, (byte)0x76, (byte)0x0a, (byte)0xb7,
		(byte)0x36, (byte)0x17, (byte)0xde, (byte)0x4a,
		(byte)0x96, (byte)0x26, (byte)0x2c, (byte)0x6f,
		(byte)0x5d, (byte)0x9e, (byte)0x98, (byte)0xbf,
		(byte)0x92, (byte)0x92, (byte)0xdc, (byte)0x29,
		(byte)0xf8, (byte)0xf4, (byte)0x1d, (byte)0xbd,
		(byte)0x28, (byte)0x9a, (byte)0x14, (byte)0x7c,
		(byte)0xe9, (byte)0xda, (byte)0x31, (byte)0x13,
		(byte)0xb5, (byte)0xf0, (byte)0xb8, (byte)0xc0,
		(byte)0x0a, (byte)0x60, (byte)0xb1, (byte)0xce,
		(byte)0x1d, (byte)0x7e, (byte)0x81, (byte)0x9d,
		(byte)0x7a, (byte)0x43, (byte)0x1d, (byte)0x7c,
		(byte)0x90, (byte)0xea, (byte)0x0e, (byte)0x5f,
	};

	private static final byte[] n = {
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff,
		(byte)0xc7, (byte)0x63, (byte)0x4d, (byte)0x81,
		(byte)0xf4, (byte)0x37, (byte)0x2d, (byte)0xdf,
		(byte)0x58, (byte)0x1a, (byte)0x0d, (byte)0xb2,
		(byte)0x48, (byte)0xb0, (byte)0xa7, (byte)0x7a,
		(byte)0xec, (byte)0xec, (byte)0x19, (byte)0x6a,
		(byte)0xcc, (byte)0xc5, (byte)0x29, (byte)0x73,
	};

	private static final short k = 1;

	public NeoSECP384R1Key(byte keyRef) {
		super(keyRef, oid, size, p, a, b, G, n, k);
	};
}

